<diagram program="umletino" version="15.1"><zoom_level>3</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLPackage</id><coordinates><x>0</x><y>192</y><w>552</w><h>249</h></coordinates><panel_attributes>C Data Model
group=group-0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>597</x><y>228</y><w>75</w><h>24</h></coordinates><panel_attributes>&lt;&lt;struct&gt;&gt;
Pod5ReadRecordBatch_t
--
pod5::ReadTableRecordBatch batch
pod5::FileReader reader
group=group-1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>141</x><y>213</y><w>180</w><h>210</h></coordinates><panel_attributes>&lt;&lt;struct&gt;&gt;
&lt;&lt;CopyFromONTToDiagram&gt;&gt;
ReadBatchRowInfo_t
--
# Notes:
Represents a single read data info
--
 // The read id data, in binary form.
read_id_t read_id
 // Read number for the read.
uint32_t read_number
 // Start sample for the read.
uint64_t start_sample
 // Median before level.
float median_before
 // Channel for the read.
uint16_t channel
 // Channel for the read.
uint8_t well
 // Dictionary index for the pore type.
int16_t pore_type
 // Calibration offset type for the read.
float calibration_offset
 // Palibration type for the read.
float calibration_scale
 // End reason index for the read.
int16_t end_reason
 // Was the end reason for the read forced (0 for false, 1 for true).
uint8_t end_reason_forced
 // Dictionary index for run id for the read, can be used to look up run info.
int16_t run_info
 // Number of minknow events that the read contains
uint64_t num_minknow_events
 // Scale/Shift for tracked read scaling values (based on previous reads)
float tracked_scaling_scale
float tracked_scaling_shift
 // Scale/Shift for predicted read scaling values (based on this read's raw signal)
float predicted_scaling_scale
float predicted_scaling_shift
/ How many reads have been selected prior to this read on the channel-well since it was made active.
uint32_t num_reads_since_mux_change
 // How many seconds have passed since the channel-well was made active
float time_since_mux_change
 // Number of signal row entries for the read.
int64_t signal_row_count
 // The length of the read in samples.
uint64_t num_samples
group=group-0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>351</x><y>216</y><w>180</w><h>192</h></coordinates><panel_attributes>&lt;&lt;struct&gt;&gt;
&lt;&lt;CopyFromONTToDiagram&gt;&gt;
ReadBatchRowInfoArray_t
--
# Notes:
This format should be passed to writer API
--
 // The read id data, in binary form.
read_id_t const [] read_id;
 // Read number for the read.
uint32_t const [] read_number;
 // Start sample for the read.
uint64_t const [] start_sample;
 // Median before level.
float const [] median_before;
 // Channel for the read.
uint16_t const [] channel;
 // Well for the read.
uint8_t const [] well;
 // Pore type for the read.
int16_t const [] pore_type;
 // Calibration offset type for the read.
float const [] calibration_offset;
 // Palibration type for the read.
float const [] calibration_scale;
 // End reason type for the read.
pod5_end_reason_t const [] end_reason;
 // Was the end reason for the read forced (0 for false, 1 for true).
uint8_t const [] end_reason_forced;
 // Run info type for the read.
int16_t const [] run_info_id;
 // Number of minknow events that the read contains
uint64_t const [] num_minknow_events;
 // Scale/Shift for tracked read scaling values (based on previous reads)
float const [] tracked_scaling_scale;
float const [] tracked_scaling_shift;
 // Scale/Shift for predicted read scaling values (based on this read's raw signal)
float const [] predicted_scaling_scale;
float const [] predicted_scaling_shift;
 // How many reads have been selected prior to this read on the channel-well since it was made active.
uint32_t const [] num_reads_since_mux_change;
 // How many seconds have passed since the channel-well was made active
float const [] time_since_mux_change;
group=group-0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>18</x><y>255</y><w>105</w><h>42</h></coordinates><panel_attributes>&lt;&lt;struct&gt;&gt;
&lt;&lt;CopyFromONTToDiagram&gt;&gt;
CalibrationExtraData
--
 // The digitisation value used by the sequencer, equal to:
 // adc_max - adc_min + 1
uint16_t digitisation
 // The range of the calibrated channel in pA.
float range
group=group-0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>39</x><y>312</y><w>84</w><h>111</h></coordinates><panel_attributes>&lt;&lt;struct&gt;&gt;
&lt;&lt;CopyFromONTToDIagram&gt;&gt;
RunInfoDictData
--
char const * acquisition_id
int64_t acquisition_start_time_ms
int16_t adc_max
int16_t adc_min
struct KeyValueData context_tags
char const * experiment_name
char const * flow_cell_id
char const * flow_cell_product_code
char const * protocol_name
char const * protocol_run_id
int64_t protocol_start_time_ms
char const * sample_id
uint16_t sample_rate
char const * sequencing_kit
char const * sequencer_position
char const * sequencer_position_type
char const * software
char const * system_name
char const * system_type
struct KeyValueData tracking_id
group=group-0</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>597</x><y>264</y><w>75</w><h>24</h></coordinates><panel_attributes>&lt;&lt;struct&gt;&gt;
Pod5FileWriter
--
pod5::Pod5FileWriter writer
group=group-1</panel_attributes><additional_attributes></additional_attributes></element></diagram>
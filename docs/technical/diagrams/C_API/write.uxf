<diagram program="umletino" version="15.1"><zoom_level>2</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>370</x><y>228</y><w>148</w><h>30</h></coordinates><panel_attributes>&lt;&lt;file&gt;&gt;
CAPI</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLFrame</id><coordinates><x>320</x><y>186</y><w>558</w><h>100</h></coordinates><panel_attributes>pod5_add_reads_data</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>324</x><y>228</y><w>50</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
pod5_add_reads_data
(Pod5FileWriter_t * file,
uint32_t read_count,
uint16_t struct_version,
void const * row_data,
int16_t const ** signal
uint32_t const * signal_size)</panel_attributes><additional_attributes>230;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>370</x><y>202</y><w>150</w><h>30</h></coordinates><panel_attributes>lt=-
1*.2 bool success := load_struct_row_into_read_data(file-&gt;writer, read_data, struct_version, row_data, read)</panel_attributes><additional_attributes>730;130;730;20;10;20;10;130</additional_attributes></element><element><id>Relation</id><coordinates><x>374</x><y>210</y><w>142</w><h>22</h></coordinates><panel_attributes>lt=-
1*.1 [uint32_t read := 0 .. read_count - 1] &lt;&lt;declareVar&gt;&gt; ReadData read_data</panel_attributes><additional_attributes>690;90;690;20;10;20;10;90</additional_attributes></element><element><id>Relation</id><coordinates><x>434</x><y>208</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>434</x><y>200</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>516</x><y>230</y><w>112</w><h>8</h></coordinates><panel_attributes>lt=-
1*.3 add_complete_read(read_data, signal := make_span(signal[read], signal_size[read]))</panel_attributes><additional_attributes>540;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>624</x><y>232</y><w>46</w><h>6</h></coordinates><panel_attributes>_file-&gt;writer:Pod5FileWriter_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>552</x><y>228</y><w>20</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>80;10;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>392</x><y>164</y><w>50</w><h>14</h></coordinates><panel_attributes>load_struct_row_into_read_data
is a transformation operation
It takes the raw data from row_data
an just wraps it into a ReadData object</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>400</x><y>176</y><w>22</w><h>32</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;140;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>624</x><y>254</y><w>80</w><h>12</h></coordinates><panel_attributes>_m_impl: FileWriterImpl_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>644</x><y>236</y><w>56</w><h>22</h></coordinates><panel_attributes>lt=-
1*.3.1 add_complete_read(read_data, signal)</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>624</x><y>264</y><w>82</w><h>14</h></coordinates><panel_attributes>lt=-
1*.3.1.1 vector&lt;uint64_t&gt; signal_rows := add_signal(read_data, signal)</panel_attributes><additional_attributes>350;10;350;50;50;50;50;10</additional_attributes></element><element><id>Relation</id><coordinates><x>654</x><y>268</y><w>18</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>70;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>822</x><y>254</y><w>46</w><h>6</h></coordinates><panel_attributes>_m_read_table_writer: ReadTableWriter_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>702</x><y>254</y><w>124</w><h>8</h></coordinates><panel_attributes>lt=-
1*.3.1.2 add_read(read_data, make_span(signal_rows.data(), signal_rows.size()), signal.size())</panel_attributes><additional_attributes>600;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>748</x><y>252</y><w>26</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>378</x><y>328</y><w>132</w><h>28</h></coordinates><panel_attributes>_:FileWriter_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>324</x><y>326</y><w>66</w><h>8</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
add_signal(ReadData read_data, span&lt;int16_t&gt; signal)</panel_attributes><additional_attributes>270;20;50;20</additional_attributes></element><element><id>Relation</id><coordinates><x>412</x><y>316</y><w>68</w><h>16</h></coordinates><panel_attributes>lt=-
1 &lt;&lt;decl&gt;&gt; vector&lt;SignalTableRowIndex&gt; signal_rows</panel_attributes><additional_attributes>320;60;320;20;10;20;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>434</x><y>314</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>574</x><y>330</y><w>76</w><h>12</h></coordinates><panel_attributes>_signal_rows:vector&lt;SignalTableRowIndex&gt;_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>508</x><y>330</y><w>70</w><h>8</h></coordinates><panel_attributes>lt=-
2 reserve((signal.size() / m_signal_chunk_size) + 1)</panel_attributes><additional_attributes>330;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>522</x><y>328</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>396</x><y>354</y><w>104</w><h>14</h></coordinates><panel_attributes>lt=-
3* size_t chunk_start := 0; chunk_start &lt; signal.size() ; chunk_start += m_signal_chunk_size</panel_attributes><additional_attributes>420;10;420;50;90;50;90;10</additional_attributes></element><element><id>Relation</id><coordinates><x>438</x><y>358</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>404</x><y>354</y><w>88</w><h>24</h></coordinates><panel_attributes>lt=-
3*.1 size_t chunk_size := min(signal.size - chunk_start, m_signal_chunk_size)</panel_attributes><additional_attributes>400;10;400;100;30;100;30;10</additional_attributes></element><element><id>Relation</id><coordinates><x>400</x><y>354</y><w>96</w><h>34</h></coordinates><panel_attributes>lt=-
3*.2 chunk_span = signal.subspan(chunk_start, chunk_size)</panel_attributes><additional_attributes>460;10;460;150;10;150;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>438</x><y>368</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>394</x><y>354</y><w>106</w><h>44</h></coordinates><panel_attributes>lt=-
3*.3 bool is_last_batch = chunk_start + chunk_size &gt;= signal.size()</panel_attributes><additional_attributes>510;10;510;200;10;200;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>438</x><y>378</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>438</x><y>388</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>388</x><y>354</y><w>118</w><h>54</h></coordinates><panel_attributes>lt=-
4 return signal_rows</panel_attributes><additional_attributes>570;10;570;250;10;250;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>438</x><y>398</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>608</x><y>352</y><w>76</w><h>8</h></coordinates><panel_attributes>_m_signal_table_writer:SignalTableWriter_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>508</x><y>350</y><w>104</w><h>8</h></coordinates><panel_attributes>3*.4 row_index := add_signal(read_data, chunk_span, is_last_batch)</panel_attributes><additional_attributes>500;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>508</x><y>336</y><w>70</w><h>8</h></coordinates><panel_attributes>lt=-
3*.5 push_back(row_index)</panel_attributes><additional_attributes>330;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>532</x><y>334</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>542</x><y>348</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLFrame</id><coordinates><x>320</x><y>312</y><w>378</w><h>96</h></coordinates><panel_attributes>FileWriter::add_signal</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>424</x><y>438</y><w>76</w><h>8</h></coordinates><panel_attributes>_:SignalTableWriter_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>326</x><y>436</y><w>102</w><h>8</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
add_signal(ReadData read_data, span&lt;int16_t&gt; signal. bool is_last_batch)</panel_attributes><additional_attributes>490;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>418</x><y>444</y><w>92</w><h>14</h></coordinates><panel_attributes>lt=-
1. size_t row_id := m_written_batched_row_count + m_current_batch_row_count</panel_attributes><additional_attributes>340;10;340;50;100;50;100;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>550</x><y>438</y><w>64</w><h>6</h></coordinates><panel_attributes>_m_read_id_builder:FixedSizeBinaryBuilder_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>498</x><y>436</y><w>56</w><h>8</h></coordinates><panel_attributes>lt=-
2. Append(read_data.read_id.begin())</panel_attributes><additional_attributes>260;20;10;20</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>626</x><y>458</y><w>28</w><h>8</h></coordinates><panel_attributes>symbol=component
boost</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>452</x><y>448</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>518</x><y>434</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>496</x><y>444</y><w>134</w><h>22</h></coordinates><panel_attributes>lt=-
3. apply_visitors(visitors::append_signal{signal, m_pòol, read_data, is_last_batch}, m_signal_builder)</panel_attributes><additional_attributes>650;90;10;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>532</x><y>456</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>564</x><y>472</y><w>64</w><h>6</h></coordinates><panel_attributes>_m_samples_builder:UInt32Builder_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>494</x><y>444</y><w>74</w><h>34</h></coordinates><panel_attributes>lt=-
4. Append(singal.size())</panel_attributes><additional_attributes>350;150;10;150;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>506</x><y>468</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>432</x><y>444</y><w>62</w><h>20</h></coordinates><panel_attributes>lt=-
5. ++m_current_batch_row_count</panel_attributes><additional_attributes>290;10;290;80;10;80;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>428</x><y>444</y><w>70</w><h>28</h></coordinates><panel_attributes>lt=-
[m_current_batch_row_count &gt;= m_table_batch_size]
wirte_batch()</panel_attributes><additional_attributes>330;10;330;110;10;110;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>452</x><y>454</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>452</x><y>460</y><w>22</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLFrame</id><coordinates><x>318</x><y>430</y><w>346</w><h>54</h></coordinates><panel_attributes>SignalTableWriter::add_signal</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>394</x><y>534</y><w>20</w><h>6</h></coordinates><panel_attributes>_:append_signal_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>674</x><y>426</y><w>42</w><h>18</h></coordinates><panel_attributes>Dynamic algorithm selection
depending on m_signal_buider
type/variant
The following only document
PGNanoSignalBuilder</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>590</x><y>432</y><w>88</w><h>32</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>420;10;10;140</additional_attributes></element><element><id>Relation</id><coordinates><x>336</x><y>532</y><w>62</w><h>8</h></coordinates><panel_attributes>lt=-
operator(PGNanoSignalBuilder builder)</panel_attributes><additional_attributes>290;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>356</x><y>530</y><w>24</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>100;10;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>338</x><y>504</y><w>38</w><h>10</h></coordinates><panel_attributes>members are passed
on visitor construction</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>358</x><y>512</y><w>16</w><h>26</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>60;110;10;10</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>546</x><y>532</y><w>28</w><h>8</h></coordinates><panel_attributes>symbol=component
pgnano</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>412</x><y>532</y><w>138</w><h>8</h></coordinates><panel_attributes>lt=-
1. Arrow::Buffer compressed_signal := compress_signal(m_signal, m_pool, m_read_data, m_is_last_batch)</panel_attributes><additional_attributes>670;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>446</x><y>530</y><w>24</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>100;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>410</x><y>538</y><w>76</w><h>12</h></coordinates><panel_attributes>lt=-
2.offset_values.append(builder.data_values.size())</panel_attributes><additional_attributes>360;40;10;40;10;10</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>482</x><y>544</y><w>52</w><h>6</h></coordinates><panel_attributes>_builder:PGNanoSignalBuilder_</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>428</x><y>540</y><w>24</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>100;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>398</x><y>538</y><w>94</w><h>24</h></coordinates><panel_attributes>lt=-
3. data_values.append_array(
            gsl::make_span(compressed_signal-&gt;data(), compressed_signal-&gt;size())</panel_attributes><additional_attributes>450;60;450;90;50;90;50;10</additional_attributes></element><element><id>Relation</id><coordinates><x>430</x><y>550</y><w>24</w><h>6</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>100;10;10;10</additional_attributes></element><element><id>UMLFrame</id><coordinates><x>318</x><y>518</y><w>266</w><h>48</h></coordinates><panel_attributes>append_signal::operator(PGNanoSignalBuilder)</panel_attributes><additional_attributes></additional_attributes></element></diagram>